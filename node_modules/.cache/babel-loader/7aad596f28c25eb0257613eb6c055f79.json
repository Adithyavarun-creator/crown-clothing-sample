{"ast":null,"code":"import { takeLatest, put, all, call } from \"@redux-saga/core/effects\";\nimport UserActionTypes from \"./user-types\";\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nimport { SignInSuccess, SigninFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from \"./user-actions\";\nexport function* signInWithGoogle() {\n  try {\n    //getting user from useref\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider); //     const userRef = yield call(createUserProfileDocument,user)\n    //     console.log(userRef);\n    //     const userSnapshot = yield userRef.get()\n    //     yield put(SignInSuccess({\n    //         id:userSnapshot.id,\n    //         ...userSnapshot.data()\n    //     }))\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SigninFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n} //for emailsignin\n\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password); //         const userRef = yield call(createUserProfileDocument,user)\n    //  //console.log(userRef);\n    //     const userSnapshot = yield userRef.get()\n    //     yield put(SignInSuccess({\n    //         id:userSnapshot.id,\n    //         ...userSnapshot.data()\n    //     }))\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SigninFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    console.log(userRef);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SigninFailure(error));\n  }\n} //for user session\n//new method\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SigninFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n} //for sign out start\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n} //for sign-up\n\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["C:/Users/Dell XPS/Desktop/complete chinese shopping app/complete-shopping/src/redux/user/user-sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","SignInSuccess","SigninFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","signInWithGoogle","user","signInWithPopup","getSnapshotFromUserAuth","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userAuth","userRef","console","log","userSnapshot","get","id","data","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","signOut","onSignOutStart","SIGN_OUT_START","signUp","displayName","createUserWithEmailAndPassword","additionalData","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest,put,all,call } from \"@redux-saga/core/effects\";\r\nimport UserActionTypes from \"./user-types\";\r\nimport { auth,googleProvider,createUserProfileDocument,\r\ngetCurrentUser } from \"../../firebase/firebase.utils\";\r\nimport { SignInSuccess,SigninFailure \r\n    ,signOutSuccess,signOutFailure,signUpSuccess,signUpFailure} from \"./user-actions\";\r\n\r\n\r\nexport function* signInWithGoogle(){\r\ntry{ //getting user from useref\r\n    const {user} = yield auth.signInWithPopup(googleProvider)\r\n//     const userRef = yield call(createUserProfileDocument,user)\r\n//     console.log(userRef);\r\n//     const userSnapshot = yield userRef.get()\r\n//     yield put(SignInSuccess({\r\n//         id:userSnapshot.id,\r\n//         ...userSnapshot.data()\r\n//     }))\r\nyield getSnapshotFromUserAuth(user)\r\n }catch(error){\r\n     yield put(SigninFailure(error))\r\n }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,\r\n        signInWithGoogle\r\n        )\r\n}\r\n\r\n//for emailsignin\r\nexport function* signInWithEmail({payload:{email,password}}){\r\n    try{\r\n    const {user} = yield auth.signInWithEmailAndPassword(email,password)\r\n//         const userRef = yield call(createUserProfileDocument,user)\r\n//  //console.log(userRef);\r\n//     const userSnapshot = yield userRef.get()\r\n//     yield put(SignInSuccess({\r\n//         id:userSnapshot.id,\r\n//         ...userSnapshot.data()\r\n//     }))\r\nyield getSnapshotFromUserAuth(user)\r\n    }catch(error){\r\n        yield put(SigninFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,\r\n        signInWithEmail)\r\n}\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth){\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument,userAuth)\r\n        console.log(userRef);\r\n        const userSnapshot = yield userRef.get()\r\n        yield put(SignInSuccess({\r\n            id:userSnapshot.id,\r\n            ...userSnapshot.data()\r\n        }))\r\n    \r\n}catch(error){\r\n    yield put(SigninFailure(error))\r\n}\r\n}\r\n\r\n//for user session\r\n\r\n//new method\r\nexport function* isUserAuthenticated(){\r\ntry{\r\n    const userAuth = yield getCurrentUser();\r\n    if(userAuth) return\r\n    yield getSnapshotFromUserAuth(userAuth)\r\n}catch(error){\r\n    yield put(SigninFailure(error))\r\n}\r\n}\r\n\r\nexport function* onCheckUserSession(){\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION,isUserAuthenticated)\r\n}\r\n\r\n//for sign out start\r\nexport function* signOut(){\r\n    try{\r\n        yield auth.signOut()\r\n        yield(put(signOutSuccess()))\r\n    }catch(error){\r\n        yield put(signOutFailure(error))\r\n    }\r\n}\r\n\r\n\r\nexport function* onSignOutStart(){\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START,signOut)\r\n}\r\n\r\n//for sign-up\r\n\r\nexport function* signUp({payload:{email,password,displayName}}){\r\n    try{\r\n        const {user} = yield auth.createUserWithEmailAndPassword(\r\n            email,\r\n            password\r\n        )\r\n        yield put(signUpSuccess({user,additionalData:{displayName}}))\r\n    }catch(error){\r\n        yield put(signUpFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onSignUpStart(){\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START,signUp)\r\n}\r\n\r\nexport function* onSignUpSuccess(){\r\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS)\r\n}\r\n\r\nexport function* userSagas(){\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(isUserAuthenticated),\r\n        call(onSignOutStart)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}