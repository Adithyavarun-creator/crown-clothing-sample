{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell XPS\\\\Desktop\\\\complete chinese shopping app\\\\complete-shopping\\\\src\\\\pages\\\\ShopPage.js\";\nimport React, { Component } from 'react'; //import SHOP_DATA from '../Shopdata'\n//import PreviewCollection from '../components/PreviewCollection'\n\nimport CollectionOverview from '../components/CollectionOverview'; // import { connect } from 'react-redux'\n// import { selectCollection } from '../redux/shop/shop-selector'\n// import { createStructuredSelector } from 'reselect'\n\nimport { Route } from 'react-router-dom';\nimport CollectionsPage from './Collections';\nimport { firestore, convertCollectionSnapshotToMap } from '../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../redux/shop/shop-actions'; // class ShopPage extends Component{\n//     constructor(){\n//         super()\n//         this.state={\n//             collections:SHOP_DATA\n//         }\n//     }\n// render(){\n//     const {collections} = this.state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ShopPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections'); //to get the data is use\n\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      //console.log(snapshot);\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot); //console.log(collectionsMap);\n\n      updateCollections(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionOverview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionsPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this);\n  }\n\n} // const mapStateToProps = createStructuredSelector({\n//     collections:selectCollection\n// })\n// export default connect(mapStateToProps)(ShopPage)\n\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/Dell XPS/Desktop/complete chinese shopping app/complete-shopping/src/pages/ShopPage.js"],"names":["React","Component","CollectionOverview","Route","CollectionsPage","firestore","convertCollectionSnapshotToMap","connect","updateCollections","ShopPage","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B,C,CACA;AACA;;AACA,OAAOC,kBAAP,MAA+B,kCAA/B,C,CACA;AACA;AACA;;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,eAAP,MAA4B,eAA5B;AACA,SAAQC,SAAR,EAAoBC,8BAApB,QAAyD,4BAAzD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,iBAAT,QAAkC,4BAAlC,C,CACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BS,uBAD6B,GACH,IADG;AAAA;;AAG7BC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACH,MAAAA;AAAD,QAAsB,KAAKI,KAAjC;AACA,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB,CAFe,CAGf;;AACA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAiB;AACrE;AACD,YAAMC,cAAc,GAAIX,8BAA8B,CAACU,QAAD,CAAtD,CAFsE,CAGtE;;AACAR,MAAAA,iBAAiB,CAACS,cAAD,CAAjB;AACF,KAL8B,CAA/B;AAMH;;AAEFC,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAU,KAAKP,KAArB;AACH,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACA,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEO,KAAK,CAACC,IAAK,EAAjC;AACA,QAAA,SAAS,EAAElB;AADX;AAAA;AAAA;AAAA;AAAA,cADA,eAIA,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEiB,KAAK,CAACC,IAAK,gBAA3B;AACA,QAAA,SAAS,EAAEhB;AADX;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWA;;AA5B6B,C,CAiCjC;AACA;AACA;AAEA;;;AAEA,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAI;AACnCd,EAAAA,iBAAiB,EAAGS,cAAc,IAAEK,QAAQ,CAACd,iBAAiB,CAACS,cAAD,CAAlB;AADT,CAAJ,CAAnC;;AAIA,eAAeV,OAAO,CAAC,IAAD,EAAMc,kBAAN,CAAP,CAAiCZ,QAAjC,CAAf","sourcesContent":["import React,{Component} from 'react'\r\n//import SHOP_DATA from '../Shopdata'\r\n//import PreviewCollection from '../components/PreviewCollection'\r\nimport CollectionOverview from '../components/CollectionOverview'\r\n// import { connect } from 'react-redux'\r\n// import { selectCollection } from '../redux/shop/shop-selector'\r\n// import { createStructuredSelector } from 'reselect'\r\nimport { Route } from 'react-router-dom'\r\nimport CollectionsPage from './Collections'\r\nimport {firestore , convertCollectionSnapshotToMap} from '../firebase/firebase.utils'\r\nimport {connect} from 'react-redux'\r\nimport { updateCollections } from '../redux/shop/shop-actions'\r\n// class ShopPage extends Component{\r\n//     constructor(){\r\n//         super()\r\n\r\n//         this.state={\r\n//             collections:SHOP_DATA\r\n//         }\r\n//     }\r\n\r\n// render(){\r\n//     const {collections} = this.state\r\n\r\nclass ShopPage extends Component {\r\n    unsubscribeFromSnapshot = null;\r\n\r\n    componentDidMount(){\r\n        const {updateCollections} = this.props\r\n        const collectionRef = firestore.collection('collections')\r\n        //to get the data is use\r\n        this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot =>{\r\n            //console.log(snapshot);\r\n           const collectionsMap =  convertCollectionSnapshotToMap(snapshot)\r\n           //console.log(collectionsMap);\r\n           updateCollections(collectionsMap)\r\n        })\r\n    }\r\n\r\n   render(){\r\n       const {match} = this.props\r\n    return(\r\n        <div className=\"shop-page\">\r\n        <Route exact path={`${match.path}`}\r\n        component={CollectionOverview}/>\r\n\r\n        <Route path={`${match.path}/:collectionId`}\r\n        component={CollectionsPage} />\r\n        </div>\r\n    ) \r\n\r\n\r\n   }\r\n    \r\n}\r\n\r\n\r\n// const mapStateToProps = createStructuredSelector({\r\n//     collections:selectCollection\r\n// })\r\n\r\n// export default connect(mapStateToProps)(ShopPage)\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    updateCollections : collectionsMap=>dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\nexport default connect(null,mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}