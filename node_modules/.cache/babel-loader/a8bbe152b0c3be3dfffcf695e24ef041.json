{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport ShopActionTypes from './shop-types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchcollectionsuccess, fetchcollectionfailure } from './shop-actions';\nimport { selectCollection } from './shop-selector';\nexport function* fetchCollectionsAsync() {\n  yield console.log('Iam fired here');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot);\n    yield put(fetchcollectionsuccess(collectionsMap)); //put dispatches out\n  } catch (error) {} // dispatch(fetchcollectionstart())\n  //     collectionRef.get()\n  //.then(snapshot=>{\n  //         const collectionsMap = convertCollectionSnapshotToMap(snapshot)\n  //         dispatch(fetchcollectionsuccess(collectionsMap))\n  //     }).catch(error=>\n  //     dispatch(fetchcollectionfailure(error.message)))\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/Dell XPS/Desktop/complete chinese shopping app/complete-shopping/src/redux/shop/shop-sagas.js"],"names":["takeEvery","call","put","ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchcollectionsuccess","fetchcollectionfailure","selectCollection","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAkBC,IAAlB,EAAuBC,GAAvB,QAAiC,oBAAjC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAmBC,8BAAnB,QAAyD,+BAAzD;AACA,SAASC,sBAAT,EACIC,sBADJ,QACkC,gBADlC;AAEA,SAASC,gBAAT,QAAiC,iBAAjC;AAEA,OAAO,UAAUC,qBAAV,GAAiC;AAEpC,QAAMC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;;AACJ,MAAG;AACC,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAACI,8BAAD,EAAgCS,QAAhC,CAAjC;AACA,UAAMZ,GAAG,CAACI,sBAAsB,CAACU,cAAD,CAAvB,CAAT,CAJD,CAKC;AACH,GAND,CAMC,OAAMC,KAAN,EAAY,CAEZ,CAXuC,CAahC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEP;AAGD,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMlB,SAAS,CACXG,eAAe,CAACgB,uBADL,EAEXV,qBAFW,CAAf;AAIH","sourcesContent":["import {takeEvery,call,put} from 'redux-saga/effects'\r\n\r\nimport ShopActionTypes from './shop-types'\r\nimport { firestore,convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { fetchcollectionsuccess,\r\n    fetchcollectionfailure } from './shop-actions';\r\nimport { selectCollection } from './shop-selector';\r\n\r\nexport function* fetchCollectionsAsync(){\r\n\r\n    yield console.log('Iam fired here');\r\ntry{\r\n    const collectionRef = firestore.collection('collections')\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionsMap = yield call(convertCollectionSnapshotToMap,snapshot)\r\n    yield put(fetchcollectionsuccess(collectionsMap))\r\n    //put dispatches out\r\n}catch(error){\r\n\r\n}\r\n\r\n        // dispatch(fetchcollectionstart())\r\n        //     collectionRef.get()\r\n        //.then(snapshot=>{\r\n        //         const collectionsMap = convertCollectionSnapshotToMap(snapshot)\r\n        //         dispatch(fetchcollectionsuccess(collectionsMap))\r\n        //     }).catch(error=>\r\n        //     dispatch(fetchcollectionfailure(error.message)))\r\n        \r\n}\r\n\r\n\r\nexport function* fetchCollectionsStart(){\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n        )\r\n}"]},"metadata":{},"sourceType":"module"}