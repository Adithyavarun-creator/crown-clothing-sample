{"ast":null,"code":"import { takeEvery, call } from 'redux-saga/effects';\nimport ShopActionTypes from './shop-types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchcollectionsuccess, fetchcollectionfailure } from './shop-actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('Iam fired here');\n  const collectionRef = firestore.collection('collections');\n  const snapshot = yield collectionRef.get();\n  const collectionsMap = yield call(convertCollectionSnapshotToMap, snapshot); // dispatch(fetchcollectionstart())\n  //     collectionRef.get()\n  //.then(snapshot=>{\n  //         const collectionsMap = convertCollectionSnapshotToMap(snapshot)\n  //         dispatch(fetchcollectionsuccess(collectionsMap))\n  //     }).catch(error=>\n  //     dispatch(fetchcollectionfailure(error.message)))\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/Dell XPS/Desktop/complete chinese shopping app/complete-shopping/src/redux/shop/shop-sagas.js"],"names":["takeEvery","call","ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchcollectionsuccess","fetchcollectionfailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,SAAR,EAAkBC,IAAlB,QAA6B,oBAA7B;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAmBC,8BAAnB,QAAyD,+BAAzD;AACA,SAASC,sBAAT,EACIC,sBADJ,QACkC,gBADlC;AAGA,OAAO,UAAUC,qBAAV,GAAiC;AAEpC,QAAMC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAN;AAEJ,QAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,QAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,QAAMC,cAAc,GAAG,MAAMb,IAAI,CAACG,8BAAD,EAAgCQ,QAAhC,CAAjC,CANwC,CAOhC;AACA;AACA;AACA;AACA;AACA;AACA;AAEP;AAGD,OAAO,UAAUG,qBAAV,GAAiC;AACpC,QAAMf,SAAS,CACXE,eAAe,CAACc,uBADL,EAEXT,qBAFW,CAAf;AAIH","sourcesContent":["import {takeEvery,call} from 'redux-saga/effects'\r\n\r\nimport ShopActionTypes from './shop-types'\r\nimport { firestore,convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\r\nimport { fetchcollectionsuccess,\r\n    fetchcollectionfailure } from './shop-actions';\r\n\r\nexport function* fetchCollectionsAsync(){\r\n\r\n    yield console.log('Iam fired here');\r\n\r\nconst collectionRef = firestore.collection('collections')\r\nconst snapshot = yield collectionRef.get();\r\nconst collectionsMap = yield call(convertCollectionSnapshotToMap,snapshot)\r\n        // dispatch(fetchcollectionstart())\r\n        //     collectionRef.get()\r\n        //.then(snapshot=>{\r\n        //         const collectionsMap = convertCollectionSnapshotToMap(snapshot)\r\n        //         dispatch(fetchcollectionsuccess(collectionsMap))\r\n        //     }).catch(error=>\r\n        //     dispatch(fetchcollectionfailure(error.message)))\r\n        \r\n}\r\n\r\n\r\nexport function* fetchCollectionsStart(){\r\n    yield takeEvery(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n        )\r\n}"]},"metadata":{},"sourceType":"module"}