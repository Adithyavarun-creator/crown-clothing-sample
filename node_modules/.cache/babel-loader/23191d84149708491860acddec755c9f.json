{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport { persistStore } from 'redux-persist';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport { fetchCollectionStart } from './shop/shop-sagas';\nconst sagaMiddleware = createSagaMiddleware(); // const middlewares = [logger]\n// const middlewares = [thunk]\n\nconst middlewares = [sagaMiddleware()];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionStart);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["C:/Users/Dell XPS/Desktop/complete chinese shopping app/complete-shopping/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","rootReducer","persistStore","thunk","createSagaMiddleware","fetchCollectionStart","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA4C,OAA5C;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,SAASC,oBAAT,QAAqC,mBAArC;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C,C,CAEA;AACA;;AACA,MAAMG,WAAW,GAAG,CAACD,cAAc,EAAf,CAApB;;AAGA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA0C;AACtCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBX,MAAjB;AACH;;AAED,OAAO,MAAMY,KAAK,GAAGd,WAAW,CAACG,WAAD,EAClBF,eAAe,CAAC,GAAGQ,WAAJ,CADG,CAAzB;AAGPD,cAAc,CAACO,GAAf,CAAmBR,oBAAnB;AAEA,OAAO,MAAMS,SAAS,GAAGZ,YAAY,CAACU,KAAD,CAA9B;AAEP,eAAe;AAACA,EAAAA,KAAD;AAAOE,EAAAA;AAAP,CAAf","sourcesContent":["import {createStore, applyMiddleware } from 'redux'\r\n\r\nimport logger from 'redux-logger'\r\n\r\nimport rootReducer from './root-reducer'\r\n\r\nimport { persistStore } from 'redux-persist'\r\n\r\nimport thunk from 'redux-thunk'\r\n\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\nimport { fetchCollectionStart } from './shop/shop-sagas'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\n// const middlewares = [logger]\r\n// const middlewares = [thunk]\r\nconst middlewares = [sagaMiddleware()]\r\n\r\n\r\nif(process.env.NODE_ENV === 'development'){\r\n    middlewares.push(logger)\r\n}\r\n\r\nexport const store = createStore(rootReducer,\r\n              applyMiddleware(...middlewares))\r\n\r\nsagaMiddleware.run(fetchCollectionStart)\r\n\r\nexport const persistor = persistStore(store)\r\n\r\nexport default {store,persistor}"]},"metadata":{},"sourceType":"module"}