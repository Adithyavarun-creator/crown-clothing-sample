{"ast":null,"code":"import ShopActionTypes from './shop-types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils'; // export const updateCollections = (collectionsMap)=>({\n//     type:ShopActionTypes.UPDATE_COLLECTIONS,\n//     payload:collectionsMap\n// })\n\nexport const fetchcollectionstart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchcollectionsuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchcollectionstartasync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchcollectionstart()); //to get the data is use\n\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      //console.log(snapshot);\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot); //console.log(collectionsMap);\n\n      dispatch(fetchcollectionsuccess(collectionsMap));\n      updateCollections(collectionsMap); //    this.setState({\n      //        loading:false\n      //    })\n    }).catch(error);\n  };\n};","map":{"version":3,"sources":["C:/Users/Dell XPS/Desktop/complete chinese shopping app/complete-shopping/src/redux/shop/shop-actions.js"],"names":["ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchcollectionstart","type","FETCH_COLLECTIONS_START","fetchcollectionsuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchcollectionstartasync","dispatch","collectionRef","collection","unsubscribeFromSnapshot","onSnapshot","snapshot","updateCollections","catch","error"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAmBC,8BAAnB,QAAyD,+BAAzD,C,CACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,oBAAoB,GAAG,OAAK;AACrCC,EAAAA,IAAI,EAACJ,eAAe,CAACK;AADgB,CAAL,CAA7B;AAIP,OAAO,MAAMC,sBAAsB,GAAGC,cAAc,KAAG;AACnDH,EAAAA,IAAI,EAACJ,eAAe,CAACQ,yBAD8B;AAEnDC,EAAAA,OAAO,EAACF;AAF2C,CAAH,CAA7C;AAKP,OAAO,MAAMG,yBAAyB,GAAG,MAAI;AACzC,SAAOC,QAAQ,IAAG;AACd,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACR,oBAAoB,EAArB,CAAR,CAFc,CAGd;;AACA,SAAKW,uBAAL,GAA+BF,aAAa,CAACG,UAAd,CAAyB,MAAMC,QAAN,IAAiB;AACrE;AACD,YAAMT,cAAc,GAAIL,8BAA8B,CAACc,QAAD,CAAtD,CAFsE,CAGtE;;AACAL,MAAAA,QAAQ,CAACL,sBAAsB,CAACC,cAAD,CAAvB,CAAR;AACAU,MAAAA,iBAAiB,CAACV,cAAD,CAAjB,CALsE,CAMzE;AACA;AACA;AACC,KAT8B,EAS5BW,KAT4B,CAStBC,KATsB,CAA/B;AAUH,GAdD;AAeH,CAhBM","sourcesContent":["import ShopActionTypes from './shop-types'\r\n\r\nimport { firestore,convertCollectionSnapshotToMap } from '../../firebase/firebase.utils'\r\n// export const updateCollections = (collectionsMap)=>({\r\n//     type:ShopActionTypes.UPDATE_COLLECTIONS,\r\n//     payload:collectionsMap\r\n// })\r\n\r\nexport const fetchcollectionstart = ()=>({\r\n    type:ShopActionTypes.FETCH_COLLECTIONS_START,\r\n})\r\n\r\nexport const fetchcollectionsuccess = collectionsMap=>({\r\n    type:ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload:collectionsMap\r\n})\r\n\r\nexport const fetchcollectionstartasync = ()=>{\r\n    return dispatch =>{\r\n        const collectionRef = firestore.collection('collections')\r\n        dispatch(fetchcollectionstart())\r\n        //to get the data is use\r\n        this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot =>{\r\n            //console.log(snapshot);\r\n           const collectionsMap =  convertCollectionSnapshotToMap(snapshot)\r\n           //console.log(collectionsMap);\r\n           dispatch(fetchcollectionsuccess(collectionsMap))\r\n           updateCollections(collectionsMap)\r\n        //    this.setState({\r\n        //        loading:false\r\n        //    })\r\n        }).catch(error)\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}