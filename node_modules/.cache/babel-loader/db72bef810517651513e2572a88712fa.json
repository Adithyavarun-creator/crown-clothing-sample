{"ast":null,"code":"import { takeLatest, put, all, call } from \"@redux-saga/core/effects\";\nimport UserActionTypes from \"./user-types\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { SignInSuccess, SigninFailure } from \"./user-actions\";\nexport function* signInWithGoogle() {\n  try {\n    //getting user from useref\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider); //     const userRef = yield call(createUserProfileDocument,user)\n    //     console.log(userRef);\n    //     const userSnapshot = yield userRef.get()\n    //     yield put(SignInSuccess({\n    //         id:userSnapshot.id,\n    //         ...userSnapshot.data()\n    //     }))\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SigninFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n} //for emailsignin\n\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user); //console.log(userRef);\n\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SigninFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    console.log(userRef);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SigninFailure(error));\n  }\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/Dell XPS/Desktop/complete chinese shopping app/complete-shopping/src/redux/user/user-sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","SignInSuccess","SigninFailure","signInWithGoogle","user","signInWithPopup","getSnapshotFromUserAuth","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","userRef","userSnapshot","get","id","data","onEmailSignInStart","EMAIL_SIGN_IN_START","userAuth","console","log","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAoBC,GAApB,EAAwBC,GAAxB,EAA4BC,IAA5B,QAAwC,0BAAxC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,IAAT,EAAcC,cAAd,EAA6BC,yBAA7B,QAA8D,+BAA9D;AACA,SAASC,aAAT,EAAuBC,aAAvB,QAA4C,gBAA5C;AAGA,OAAO,UAAUC,gBAAV,GAA4B;AACnC,MAAG;AAAE;AACD,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAArB,CADD,CAEH;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMO,uBAAuB,CAACF,IAAD,CAA7B;AACE,GAVF,CAUE,OAAMG,KAAN,EAAY;AACT,UAAMb,GAAG,CAACQ,aAAa,CAACK,KAAD,CAAd,CAAT;AACH;AACD;AAED,OAAO,UAAUC,mBAAV,GAA+B;AAClC,QAAMf,UAAU,CAACI,eAAe,CAACY,oBAAjB,EACZN,gBADY,CAAhB;AAGH,C,CAED;;AACA,OAAO,UAAUO,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAT,CAA1B,EAAqD;AACxD,MAAG;AACC,UAAM;AAACT,MAAAA;AAAD,QAAS,MAAMN,IAAI,CAACgB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CAArB;AACA,UAAME,OAAO,GAAG,MAAMnB,IAAI,CAACI,yBAAD,EAA2BI,IAA3B,CAA1B,CAFD,CAGN;;AACG,UAAMY,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMvB,GAAG,CAACO,aAAa,CAAC;AACpBiB,MAAAA,EAAE,EAACF,YAAY,CAACE,EADI;AAEpB,SAAGF,YAAY,CAACG,IAAb;AAFiB,KAAD,CAAd,CAAT;AAIC,GATD,CASC,OAAMZ,KAAN,EAAY;AACT,UAAMb,GAAG,CAACQ,aAAa,CAACK,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUa,kBAAV,GAA8B;AACjC,QAAM3B,UAAU,CAACI,eAAe,CAACwB,mBAAjB,EACZX,eADY,CAAhB;AAEH;AAED,OAAO,UAAUJ,uBAAV,CAAkCgB,QAAlC,EAA2C;AAC9C,MAAG;AACC,UAAMP,OAAO,GAAG,MAAMnB,IAAI,CAACI,yBAAD,EAA2BsB,QAA3B,CAA1B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,OAAZ;AACA,UAAMC,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMvB,GAAG,CAACO,aAAa,CAAC;AACpBiB,MAAAA,EAAE,EAACF,YAAY,CAACE,EADI;AAEpB,SAAGF,YAAY,CAACG,IAAb;AAFiB,KAAD,CAAd,CAAT;AAKP,GATG,CASH,OAAMZ,KAAN,EAAY;AACT,UAAMb,GAAG,CAACQ,aAAa,CAACK,KAAD,CAAd,CAAT;AACH;AACA;AAID,OAAO,UAAUkB,SAAV,GAAqB;AACxB,QAAM9B,GAAG,CAAC,CACNC,IAAI,CAACY,mBAAD,CADE,EAENZ,IAAI,CAACwB,kBAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import { takeLatest,put,all,call } from \"@redux-saga/core/effects\";\r\nimport UserActionTypes from \"./user-types\";\r\nimport { auth,googleProvider,createUserProfileDocument } from \"../../firebase/firebase.utils\";\r\nimport { SignInSuccess,SigninFailure } from \"./user-actions\";\r\n\r\n\r\nexport function* signInWithGoogle(){\r\ntry{ //getting user from useref\r\n    const {user} = yield auth.signInWithPopup(googleProvider)\r\n//     const userRef = yield call(createUserProfileDocument,user)\r\n//     console.log(userRef);\r\n//     const userSnapshot = yield userRef.get()\r\n//     yield put(SignInSuccess({\r\n//         id:userSnapshot.id,\r\n//         ...userSnapshot.data()\r\n//     }))\r\nyield getSnapshotFromUserAuth(user)\r\n }catch(error){\r\n     yield put(SigninFailure(error))\r\n }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,\r\n        signInWithGoogle\r\n        )\r\n}\r\n\r\n//for emailsignin\r\nexport function* signInWithEmail({payload:{email,password}}){\r\n    try{\r\n        const {user} = yield auth.signInWithEmailAndPassword(email,password)\r\n        const userRef = yield call(createUserProfileDocument,user)\r\n //console.log(userRef);\r\n    const userSnapshot = yield userRef.get()\r\n    yield put(SignInSuccess({\r\n        id:userSnapshot.id,\r\n        ...userSnapshot.data()\r\n    }))\r\n    }catch(error){\r\n        yield put(SigninFailure(error))\r\n    }\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,\r\n        signInWithEmail)\r\n}\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth){\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument,userAuth)\r\n        console.log(userRef);\r\n        const userSnapshot = yield userRef.get()\r\n        yield put(SignInSuccess({\r\n            id:userSnapshot.id,\r\n            ...userSnapshot.data()\r\n        }))\r\n    \r\n}catch(error){\r\n    yield put(SigninFailure(error))\r\n}\r\n}\r\n\r\n\r\n\r\nexport function* userSagas(){\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}