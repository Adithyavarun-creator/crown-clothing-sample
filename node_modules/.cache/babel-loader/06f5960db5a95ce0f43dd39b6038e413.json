{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport { persistStore } from 'redux-persist';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nconst sagaMiddleware = createSagaMiddleware(); // const middlewares = [logger]\n// const middlewares = [thunk]\n\nconst middlewares = sagaMiddleware();\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); // sagaMiddleware.run()\n\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["C:/Users/Dell XPS/Desktop/complete chinese shopping app/complete-shopping/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","rootReducer","persistStore","thunk","createSagaMiddleware","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA4C,OAA5C;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,SAASC,YAAT,QAA6B,eAA7B;AAEA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,oBAAP,MAAiC,YAAjC;AAGA,MAAMC,cAAc,GAAGD,oBAAoB,EAA3C,C,CAEA;AACA;;AACA,MAAME,WAAW,GAAGD,cAAc,EAAlC;;AAGA,IAAGE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA5B,EAA0C;AACtCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACH;;AAED,OAAO,MAAMW,KAAK,GAAGb,WAAW,CAACG,WAAD,EAClBF,eAAe,CAAC,GAAGO,WAAJ,CADG,CAAzB,C,CAGP;;AAEA,OAAO,MAAMM,SAAS,GAAGV,YAAY,CAACS,KAAD,CAA9B;AAEP,eAAe;AAACA,EAAAA,KAAD;AAAOC,EAAAA;AAAP,CAAf","sourcesContent":["import {createStore, applyMiddleware } from 'redux'\r\n\r\nimport logger from 'redux-logger'\r\n\r\nimport rootReducer from './root-reducer'\r\n\r\nimport { persistStore } from 'redux-persist'\r\n\r\nimport thunk from 'redux-thunk'\r\n\r\nimport createSagaMiddleware from 'redux-saga'\r\n\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\n// const middlewares = [logger]\r\n// const middlewares = [thunk]\r\nconst middlewares = sagaMiddleware()\r\n\r\n\r\nif(process.env.NODE_ENV === 'development'){\r\n    middlewares.push(logger)\r\n}\r\n\r\nexport const store = createStore(rootReducer,\r\n              applyMiddleware(...middlewares))\r\n\r\n// sagaMiddleware.run()\r\n\r\nexport const persistor = persistStore(store)\r\n\r\nexport default {store,persistor}"]},"metadata":{},"sourceType":"module"}